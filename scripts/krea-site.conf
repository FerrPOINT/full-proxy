# Krea.ai Proxy Configuration
# This file contains only the Krea.ai proxy settings
# Place this file in /etc/nginx/sites-available/krea.acm-ai.ru

server {
    listen 80;
    server_name krea.acm-ai.ru;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name krea.acm-ai.ru;

    # SSL Configuration - Update paths if needed
    ssl_certificate /etc/letsencrypt/live/krea.acm-ai.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/krea.acm-ai.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "ALLOWALL" always;
    add_header Content-Security-Policy "frame-ancestors *" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS headers for iframe support
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    add_header Access-Control-Allow-Credentials "true" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials "true";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 204;
    }

    # Lua test endpoint
    location = /lua_test {
        content_by_lua_block {
            ngx.header.content_type = 'text/plain';
            ngx.say('Lua работает!');
        }
    }

    # Test page with iframe
    location = /krea-test.html {
        content_by_lua_block {
            ngx.header.content_type = 'text/html';
            ngx.say([[
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Krea.ai Proxy Test</title>
    <style>
        body { margin: 0; padding: 20px; font-family: Arial, sans-serif; }
        .container { max-width: 1200px; margin: 0 auto; }
        h1 { color: #333; margin-bottom: 20px; }
        .iframe-container { 
            border: 2px solid #ddd; 
            border-radius: 8px; 
            overflow: hidden;
            height: 80vh;
        }
        iframe { 
            width: 100%; 
            height: 100%; 
            border: none; 
        }
        .status { 
            margin-top: 20px; 
            padding: 10px; 
            background: #f0f0f0; 
            border-radius: 4px; 
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Krea.ai Proxy Test Page</h1>
        <div class="iframe-container">
            <iframe src="https://krea.acm-ai.ru/" 
                    allow="camera; microphone; geolocation; encrypted-media; display-capture"
                    sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-modals">
            </iframe>
        </div>
        <div class="status">
            <p><strong>Status:</strong> Iframe loaded successfully</p>
            <p><strong>Domain:</strong> krea.acm-ai.ru</p>
            <p><strong>Target:</strong> krea.ai</p>
        </div>
    </div>
</body>
</html>
            ]]);
        }
    }

    # Main proxy location
    location / {
        # Proxy settings
        proxy_pass https://krea.ai;
        proxy_set_header Host krea.ai;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host krea.acm-ai.ru;
        proxy_set_header X-Forwarded-Server krea.acm-ai.ru;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;

        # Disable compression for body filtering
        proxy_set_header Accept-Encoding "";

        # Cookie domain rewriting (fallback)
        proxy_cookie_domain krea.ai krea.acm-ai.ru;
        proxy_cookie_domain .krea.ai .krea.acm-ai.ru;

        # Lua header filter for Set-Cookie manipulation
        header_filter_by_lua_file /etc/nginx/lua/cookie_filter.lua;

        # Lua body filter for URL replacement
        body_filter_by_lua_file /etc/nginx/lua/body_filter.lua;

        # Remove Content-Length for body manipulation
        proxy_hide_header Content-Length;
    }
} 